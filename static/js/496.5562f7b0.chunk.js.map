{"version":3,"file":"static/js/496.5562f7b0.chunk.js","mappings":"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","sources":["components/Pagination/Pagination.jsx","helpers/pagesAmount.js","components/Blog/Blog.jsx","helpers/categoryLits.js","hooks/useLocalStorage.js","components/Form/Form.jsx","pages/Articles.jsx"],"sourcesContent":["import {\r\n  PaginationItemStyled,\r\n  PaginationLinkStyled,\r\n  PaginationListStyled,\r\n} from \"components\";\r\n\r\nexport default function Pagination({\r\n  isActive,\r\n  setIsActive,\r\n  blogsPerPage,\r\n  totalBlogs,\r\n  paginate,\r\n}) {\r\n  const pageNumbers = [];\r\n  for (let i = 1; i <= Math.ceil(totalBlogs / blogsPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n  return (\r\n    <>\r\n      <PaginationListStyled>\r\n        {pageNumbers.map((number) => (\r\n          <PaginationItemStyled key={number}>\r\n            <PaginationLinkStyled\r\n              {...(isActive === number ? { active: true } : {})}\r\n              onClick={() => {\r\n                paginate(number);\r\n                setIsActive(number);\r\n              }}\r\n            >\r\n              {number}\r\n            </PaginationLinkStyled>\r\n          </PaginationItemStyled>\r\n        ))}\r\n      </PaginationListStyled>\r\n    </>\r\n  );\r\n}\r\n","export const pagesAmount = [\"-\", 5, 10, 15, 20];\r\n","import {\r\n  BlogLabelStyled,\r\n  BlogListStyled,\r\n  BlogSelectStyled,\r\n  OptionStyled,\r\n} from \"components\";\r\nimport Pagination from \"components/Pagination/Pagination\";\r\nimport { pagesAmount } from \"helpers/pagesAmount\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getAllBlogs } from \"redux/blogs/blog-operations\";\r\nimport { getBlogs, getTotal } from \"redux/selector\";\r\nimport Post from \"../Post/Post\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\n\r\nexport default function Blog() {\r\n  // -----------------------------Pagination------------------------------\r\n\r\n  const [searchParams, setSearchParams] = useSearchParams({\r\n    limit: Infinity,\r\n    page: 1,\r\n  });\r\n\r\n  const page = searchParams.get(\"page\");\r\n  const limit = searchParams.get(\"limit\");\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(getAllBlogs({ page, limit }));\r\n  }, [dispatch, limit, page]);\r\n\r\n  const blogs = useSelector(getBlogs);\r\n  const total = useSelector(getTotal);\r\n  const [isActive, setIsActive] = useState(1);\r\n  const [isUsersBlogs] = useState(false);\r\n\r\n  console.log(`Page${page}, Limit ${limit}`);\r\n  console.log(blogs);\r\n\r\n  const paginate = (pageNumber) => {\r\n    setSearchParams({ page: pageNumber, limit });\r\n  };\r\n\r\n  const selectHandler = (e) => {\r\n    setSearchParams({ page: 1 });\r\n\r\n    setIsActive(1);\r\n    const value = e.target.value;\r\n    if (value === \"-\") {\r\n      setSearchParams({ limit: Infinity });\r\n      return;\r\n    }\r\n    setSearchParams({ limit: e.target.value });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <BlogLabelStyled>\r\n        Количество постов на странице\r\n        <BlogSelectStyled defaultValue={\"-\"} onChange={selectHandler}>\r\n          {pagesAmount.map((el, index) => (\r\n            <OptionStyled key={index} value={el}>\r\n              {el}\r\n            </OptionStyled>\r\n          ))}\r\n        </BlogSelectStyled>\r\n      </BlogLabelStyled>\r\n      <BlogListStyled>\r\n        <>\r\n          {blogs.map(\r\n            ({ _id, title, author, text, category, img, coverUrl }) => (\r\n              <Post\r\n                key={_id}\r\n                id={_id}\r\n                title={title}\r\n                author={author}\r\n                text={text}\r\n                category={category}\r\n                img={img}\r\n                coverUrl={coverUrl}\r\n                isUsersBlogs={isUsersBlogs}\r\n              />\r\n            )\r\n          )}\r\n        </>\r\n      </BlogListStyled>\r\n\r\n      <Pagination\r\n        blogsPerPage={limit}\r\n        paginate={paginate}\r\n        totalBlogs={total}\r\n        isActive={isActive}\r\n        setIsActive={setIsActive}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","export const categoryList = [\r\n  \"-\",\r\n  \"Боевик\",\r\n  \"Приключения\",\r\n  \"Детектив\",\r\n  \"Фентази\",\r\n  \"Ужасы\",\r\n];\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport const useLocalStorage = (key, defaultValue) => {\r\n  const [value, setValue] = useState(() => {\r\n    let currentValue;\r\n    try {\r\n      currentValue = JSON.parse(localStorage.getItem(key)) || defaultValue;\r\n    } catch (error) {\r\n      currentValue = defaultValue;\r\n    }\r\n    return currentValue;\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n  }, [value, key]);\r\n\r\n  return [value, setValue];\r\n};\r\n","import { categoryList } from \"../../helpers/categoryLits\";\r\nimport { useState } from \"react\";\r\nimport {\r\n  ButtonStyled,\r\n  FormInputStyled,\r\n  FormStyled,\r\n  InputWrapper,\r\n  LabelSpanStyled,\r\n  LabelStyled,\r\n  OptionStyled,\r\n  SelectStyled,\r\n  TextAreaStyled,\r\n  TextAreaWrapperStyled,\r\n  WrapperStyled,\r\n} from \"./FormStyled\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useLocalStorage } from \"hooks/useLocalStorage\";\r\nimport { addBlog } from \"redux/blogs/blog-operations\";\r\n\r\nexport default function Form() {\r\n  const dispatch = useDispatch();\r\n  const [title, setTitle] = useLocalStorage(\"title\", \"\");\r\n  const [author, setAuthor] = useLocalStorage(\"author\", \"\");\r\n  const [text, setText] = useLocalStorage(\"text\", \"\");\r\n  const [file, setFile] = useState(null);\r\n  const [category, setCategory] = useState(\"-\");\r\n\r\n  const resetState = () => {\r\n    setText(\"\");\r\n    setTitle(\"\");\r\n    setAuthor(\"\");\r\n    setCategory(\"-\");\r\n  };\r\n\r\n  const uploadContent = (e) => {\r\n    e.preventDefault();\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      setFile(file);\r\n    }\r\n  };\r\n\r\n  const changeHandler = (e) => {\r\n    const inputName = e.target.name;\r\n    const inputValue = e.target.value;\r\n\r\n    switch (inputName) {\r\n      case \"title\":\r\n        setTitle(inputValue);\r\n        break;\r\n      case \"author\":\r\n        setAuthor(inputValue);\r\n        break;\r\n      case \"text\":\r\n        setText(inputValue);\r\n        break;\r\n      case \"category\":\r\n        setCategory(inputValue);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (!title || !text || !author) {\r\n      alert(\"Please fill in all fields\");\r\n      return;\r\n    }\r\n\r\n    let processedCategory;\r\n    if (category === \"-\") {\r\n      processedCategory = \"\";\r\n    } else {\r\n      processedCategory = category;\r\n    }\r\n\r\n    const data = new FormData();\r\n    data.append(\"title\", title);\r\n    data.append(\"author\", author);\r\n    data.append(\"text\", text);\r\n    data.append(\"category\", processedCategory.toLocaleLowerCase());\r\n    data.append(\"cover\", file);\r\n    dispatch(addBlog(data));\r\n    resetState();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <FormStyled onSubmit={submitHandler} enctype=\"multipart/form-data\">\r\n        <WrapperStyled>\r\n          <InputWrapper>\r\n            <LabelStyled>\r\n              <LabelSpanStyled>Заголовок</LabelSpanStyled>\r\n              <FormInputStyled\r\n                type=\"text\"\r\n                onChange={changeHandler}\r\n                name=\"title\"\r\n                value={title}\r\n              />\r\n            </LabelStyled>\r\n            <LabelStyled>\r\n              <LabelSpanStyled>Автор</LabelSpanStyled>\r\n              <FormInputStyled\r\n                type=\"text\"\r\n                onChange={changeHandler}\r\n                name=\"author\"\r\n                value={author}\r\n              />\r\n            </LabelStyled>\r\n            <LabelStyled>\r\n              <LabelSpanStyled>Обложка</LabelSpanStyled>\r\n              <FormInputStyled\r\n                type=\"file\"\r\n                onChange={uploadContent}\r\n                name=\"cover\"\r\n                // value={author}\r\n              />\r\n            </LabelStyled>\r\n            <LabelStyled>\r\n              <LabelSpanStyled>Категория</LabelSpanStyled>\r\n              <SelectStyled\r\n                onChange={changeHandler}\r\n                name=\"category\"\r\n                value={category}\r\n              >\r\n                {categoryList.map((el) => (\r\n                  <OptionStyled key={el.length} value={el}>\r\n                    {el}\r\n                  </OptionStyled>\r\n                ))}\r\n              </SelectStyled>\r\n            </LabelStyled>\r\n          </InputWrapper>\r\n          <TextAreaWrapperStyled>\r\n            <LabelStyled>\r\n              <LabelSpanStyled>Текст</LabelSpanStyled>\r\n              <TextAreaStyled\r\n                placeholder=\"Что у вас нового?\"\r\n                onChange={changeHandler}\r\n                name=\"text\"\r\n                value={text}\r\n              />\r\n            </LabelStyled>\r\n          </TextAreaWrapperStyled>\r\n        </WrapperStyled>\r\n        <ButtonStyled type=\"submit\">Добивить</ButtonStyled>\r\n      </FormStyled>\r\n    </>\r\n  );\r\n}\r\n","import { ContainerStyled } from \"components\";\r\nimport Blog from \"components/Blog/Blog\";\r\nimport Form from \"components/Form/Form\";\r\nimport React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getIsLoggedIn } from \"redux/selector\";\r\n\r\nexport default function Articles() {\r\n  const isLoggedIn = useSelector(getIsLoggedIn);\r\n  return (\r\n    <>\r\n      <ContainerStyled>\r\n        {isLoggedIn && <Form />}\r\n        <Blog />\r\n      </ContainerStyled>\r\n    </>\r\n  );\r\n}\r\n"],"names":["Pagination","isActive","setIsActive","blogsPerPage","totalBlogs","paginate","pageNumbers","i","Math","ceil","push","PaginationListStyled","map","number","PaginationItemStyled","PaginationLinkStyled","active","onClick","pagesAmount","Blog","useSearchParams","limit","Infinity","page","searchParams","setSearchParams","get","dispatch","useDispatch","useEffect","getAllBlogs","blogs","useSelector","getBlogs","total","getTotal","useState","isUsersBlogs","console","log","BlogLabelStyled","BlogSelectStyled","defaultValue","onChange","e","target","value","el","index","OptionStyled","BlogListStyled","_id","title","author","text","category","img","coverUrl","Post","id","pageNumber","categoryList","useLocalStorage","key","currentValue","JSON","parse","localStorage","getItem","error","setValue","setItem","stringify","Form","setTitle","setAuthor","setText","file","setFile","setCategory","changeHandler","inputName","name","inputValue","FormStyled","onSubmit","preventDefault","processedCategory","data","FormData","append","toLocaleLowerCase","addBlog","alert","enctype","type","files","length","placeholder","Articles","isLoggedIn","getIsLoggedIn","ContainerStyled"],"sourceRoot":""}