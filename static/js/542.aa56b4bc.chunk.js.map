{"version":3,"file":"static/js/542.aa56b4bc.chunk.js","mappings":"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","sources":["helpers/categoryLits.js","components/Post/PostStyled.jsx","components/Post/Post.jsx","components/Blog/BlogStyled.jsx","redux/selector.js","components/Pagination/PaginationStyled.jsx","components/Pagination/Pagination.jsx","helpers/pagesAmount.js","components/Blog/Blog.jsx","../node_modules/nanoid/index.browser.js","components/Form/FormStyled.jsx","hooks/useLocalStorage.js","components/Form/Form.jsx","pages/Articles.jsx"],"sourcesContent":["export const categoryList = [\r\n  \"-\",\r\n  \"Боевик\",\r\n  \"Приключения \",\r\n  \"Детектив\",\r\n  \"Фентази\",\r\n  \"Ужасы\",\r\n];\r\n","import styled from \"styled-components\";\r\n\r\nexport const PostWrapperStyled = styled.div`\r\n  border: 1px solid black;\r\n  display: flex;\r\n  flex-basis: calc(100% / 2 - 30px);\r\n  margin-right: 30px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nexport const ImgWrapperStyled = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  padding-left: 10px;\r\n  margin: 3px;\r\n`;\r\n\r\nexport const ImgStyled = styled.img`\r\n  width: 80px;\r\n`;\r\n\r\nexport const InfoWrapperStyled = styled.div`\r\n  padding: 10px 0 10px 10px;\r\n`;\r\n\r\nexport const TitleStyled = styled.p`\r\n  font-weight: 800;\r\n`;\r\n\r\nexport const TextStyled = styled.p``;\r\n\r\nexport const AuthorStyled = styled.p`\r\n  font-style: italic;\r\n`;\r\n\r\nexport const CategoryStyled = styled.p`\r\n  font-style: italic;\r\n  display: inline-block;\r\n  margin-right: 50px;\r\n`;\r\n\r\nexport const ButtonTextStyled = styled.button`\r\n  background-color: transparent;\r\n  border: none;\r\n  cursor: pointer;\r\n  color: ${(p) => p.theme.colors.blue};\r\n`;\r\n\r\nexport const DeleteButtonStyled = styled.button`\r\n  display: inline-block;\r\n`;\r\n","import {\r\n  AuthorStyled,\r\n  ButtonTextStyled,\r\n  CategoryStyled,\r\n  DeleteButtonStyled,\r\n  ImgStyled,\r\n  ImgWrapperStyled,\r\n  InfoWrapperStyled,\r\n  PostWrapperStyled,\r\n  TextStyled,\r\n  TitleStyled,\r\n} from \"./PostStyled\";\r\nimport localImg from \"../../images/blog.jpg\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { deleteBlog } from \"redux/blogsSlice\";\r\n\r\nconst imgPath = \"https://via.placeholder.com/80x120\";\r\n\r\nexport default function Post({ id, title, author, text, category, img }) {\r\n  const dispatch = useDispatch();\r\n  const [textToggle, setTextToggle] = useState(false);\r\n\r\n  const clickToggle = () => {\r\n    setTextToggle(!textToggle);\r\n  };\r\n\r\n  let processedText;\r\n  if (textToggle === false) {\r\n    processedText = text.slice(0, 250);\r\n  }\r\n  if (textToggle === true) {\r\n    processedText = text;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <PostWrapperStyled>\r\n        <ImgWrapperStyled>\r\n          <ImgStyled src={img || localImg || imgPath} />\r\n        </ImgWrapperStyled>\r\n        <InfoWrapperStyled>\r\n          <TitleStyled>\r\n            Title: {title}\r\n            {id}\r\n          </TitleStyled>\r\n          <AuthorStyled>Author: {author} </AuthorStyled>\r\n          <TextStyled>\r\n            Text: {processedText}\r\n            <ButtonTextStyled onClick={clickToggle}>\r\n              {!textToggle ? \"...\" : \"show less\"}\r\n            </ButtonTextStyled>\r\n          </TextStyled>\r\n\r\n          <CategoryStyled>\r\n            {category === \"-\" ? \"\" : `Category: ${category}`}\r\n          </CategoryStyled>\r\n          <DeleteButtonStyled onClick={() => dispatch(deleteBlog(id))}>\r\n            Удалить пост\r\n          </DeleteButtonStyled>\r\n        </InfoWrapperStyled>\r\n      </PostWrapperStyled>\r\n    </>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\nimport { ContainerStyled } from \"../Header/HeaderStyled\";\r\n\r\nexport const BlogContainerStyled = styled(ContainerStyled)`\r\n  /* display: flex;\r\n  flex-wrap: wrap; */\r\n`;\r\n\r\nexport const BlogListStyled = styled.ul`\r\n  list-style: none;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  margin-right: -30px;\r\n  margin-bottom: -10px;\r\n  padding: 0;\r\n  margin-top: 0;\r\n`;\r\n\r\nexport const BlogSelectStyled = styled.select`\r\n  margin-left: 20px;\r\n`;\r\n\r\nexport const OptionStyled = styled.option``;\r\n\r\nexport const BlogLabelStyled = styled.label`\r\n  display: inline-block;\r\n  text-align: center;\r\n  font-size: ${(p) => p.theme.fontSizes.medium};\r\n  margin-bottom: 15px;\r\n`;\r\n","export const getBlogs = (state) => state.blogs;\r\n","import styled from \"styled-components\";\r\n\r\nexport const PaginationListStyled = styled.ul`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  list-style: none;\r\n  padding: 0;\r\n  margin: 20px 0 0 0;\r\n`;\r\n\r\nexport const PaginationItemStyled = styled.li`\r\n  &:not(:last-child) {\r\n    margin-right: 20px;\r\n  }\r\n`;\r\n\r\nexport const PaginationLinkStyled = styled.a`\r\n  text-decoration: none;\r\n  font-weight: 600;\r\n  font-size: ${(p) => p.theme.fontSizes.medium};\r\n  color: ${(p) => p.theme.colors.dark};\r\n  cursor: pointer;\r\n  &:hover {\r\n    color: ${(p) => p.theme.colors.accent};\r\n  }\r\n`;\r\n","import {\r\n  PaginationItemStyled,\r\n  PaginationLinkStyled,\r\n  PaginationListStyled,\r\n} from \"./PaginationStyled\";\r\n\r\nexport default function Pagination({ blogsPerPage, totalBlogs, paginate }) {\r\n  const pageNumbers = [];\r\n  for (let i = 1; i <= Math.ceil(totalBlogs / blogsPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n  return (\r\n    <>\r\n      <PaginationListStyled>\r\n        {pageNumbers.map((number) => (\r\n          <PaginationItemStyled key={number}>\r\n            <PaginationLinkStyled onClick={() => paginate(number)}>\r\n              {number}\r\n            </PaginationLinkStyled>\r\n          </PaginationItemStyled>\r\n        ))}\r\n      </PaginationListStyled>\r\n    </>\r\n  );\r\n}\r\n","export const pagesAmount = [\"-\", 5, 10, 15, 20];\r\n","import Post from \"../Post/Post\";\r\nimport {\r\n  BlogContainerStyled,\r\n  BlogLabelStyled,\r\n  BlogListStyled,\r\n  BlogSelectStyled,\r\n  OptionStyled,\r\n} from \"./BlogStyled\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useState } from \"react\";\r\nimport { getBlogs } from \"redux/selector\";\r\nimport Pagination from \"components/Pagination/Pagination\";\r\nimport { pagesAmount } from \"helpers/pagesAmount\";\r\n\r\nexport default function Blog() {\r\n  const blogs = useSelector(getBlogs);\r\n  const [blogsPerPage, setBlogsPerPage] = useState(10);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  const lastBlogIndex = currentPage * blogsPerPage;\r\n  const firstBlogIndex = lastBlogIndex - blogsPerPage;\r\n  const currentBlog = blogs.slice(firstBlogIndex, lastBlogIndex);\r\n\r\n  const paginate = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  const selectHandler = (e) => {\r\n    const value = e.target.value;\r\n    if (value === \"-\") {\r\n      setBlogsPerPage(Infinity);\r\n      return;\r\n    }\r\n    setBlogsPerPage(value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <BlogContainerStyled>\r\n        <BlogLabelStyled>\r\n          Количество постов на странице\r\n          <BlogSelectStyled defaultValue={10} onChange={selectHandler}>\r\n            {pagesAmount.map((el, index) => (\r\n              <OptionStyled\r\n                // {...(el === 10 ? { selected: true } : {})}\r\n                key={index}\r\n                value={el}\r\n              >\r\n                {el}\r\n              </OptionStyled>\r\n            ))}\r\n          </BlogSelectStyled>\r\n        </BlogLabelStyled>\r\n\r\n        <BlogListStyled>\r\n          {currentBlog.map(({ id, title, author, text, category, img }) => (\r\n            <Post\r\n              key={id}\r\n              id={id}\r\n              title={title}\r\n              author={author}\r\n              text={text}\r\n              category={category}\r\n              img={img}\r\n            />\r\n          ))}\r\n        </BlogListStyled>\r\n        <Pagination\r\n          blogsPerPage={blogsPerPage}\r\n          paginate={paginate}\r\n          totalBlogs={blogs.length}\r\n        />\r\n      </BlogContainerStyled>\r\n    </>\r\n  );\r\n}\r\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import styled from \"styled-components\";\r\n\r\nexport const FormStyled = styled.form`\r\n  background-color: ${(p) => p.theme.colors.border};\r\n  text-align: center;\r\n`;\r\n\r\nexport const WrapperStyled = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nexport const LabelStyled = styled.label`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  &:not(:nth-child(n + 3)) {\r\n    margin-bottom: 15px;\r\n  }\r\n`;\r\n\r\nexport const LabelSpanStyled = styled.span`\r\n  font-size: ${(p) => p.theme.fontSizes.medium};\r\n`;\r\n\r\nexport const FormInputStyled = styled.input`\r\n  padding-left: 10px;\r\n  font-size: ${(p) => p.theme.fontSizes.medium};\r\n\r\n  width: 80%;\r\n`;\r\n\r\nexport const InputWrapper = styled.div`\r\n  width: 50%;\r\n  height: 145px;\r\n  padding: 20px;\r\n`;\r\n\r\nexport const SelectStyled = styled.select``;\r\n\r\nexport const OptionStyled = styled.option``;\r\n\r\nexport const TextAreaWrapperStyled = styled(InputWrapper)``;\r\n\r\nexport const TextAreaStyled = styled.textarea`\r\n  font-size: ${(p) => p.theme.fontSizes.medium};\r\n\r\n  padding: 15px;\r\n  width: 85%;\r\n  height: 105px;\r\n  &::placeholder {\r\n    font-size: ${(p) => p.theme.fontSizes.medium};\r\n    font-weight: 400;\r\n    color: ${(p) => p.theme.colors.inputDark};\r\n  }\r\n`;\r\n\r\nexport const ButtonStyled = styled.button`\r\n  margin-bottom: 15px;\r\n  font-size: ${(p) => p.theme.fontSizes.medium};\r\n  border-radius: 4px;\r\n  background-color: ${(p) => p.theme.colors.white};\r\n  &:hover {\r\n    background-color: ${(p) => p.theme.colors.accent};\r\n  }\r\n`;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport const useLocalStorage = (key, defaultValue) => {\r\n  const [value, setValue] = useState(() => {\r\n    let currentValue;\r\n    try {\r\n      currentValue = JSON.parse(localStorage.getItem(key)) || defaultValue;\r\n    } catch (error) {\r\n      currentValue = defaultValue;\r\n    }\r\n    return currentValue;\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n  }, [value, key]);\r\n\r\n  return [value, setValue];\r\n};\r\n","import { categoryList } from \"../../helpers/categoryLits\";\r\nimport { ContainerStyled } from \"../Header/HeaderStyled\";\r\nimport { useState } from \"react\";\r\nimport { nanoid } from \"nanoid\";\r\nimport {\r\n  ButtonStyled,\r\n  FormInputStyled,\r\n  FormStyled,\r\n  InputWrapper,\r\n  LabelSpanStyled,\r\n  LabelStyled,\r\n  OptionStyled,\r\n  SelectStyled,\r\n  TextAreaStyled,\r\n  TextAreaWrapperStyled,\r\n  WrapperStyled,\r\n} from \"./FormStyled\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addBlog } from \"redux/blogsSlice\";\r\nimport { useLocalStorage } from \"hooks/useLocalStorage\";\r\n\r\nexport default function Form() {\r\n  const dispatch = useDispatch();\r\n  const [title, setTitle] = useLocalStorage(\"title\", \"\");\r\n  const [author, setAuthor] = useLocalStorage(\"author\", \"\");\r\n  const [text, setText] = useLocalStorage(\"text\", \"\");\r\n  const [category, setCategory] = useState(\"-\");\r\n\r\n  const resetState = () => {\r\n    setText(\"\");\r\n    setTitle(\"\");\r\n    setAuthor(\"\");\r\n    setCategory(\"-\");\r\n  };\r\n\r\n  const changeHandler = (e) => {\r\n    const inputName = e.target.name;\r\n    const inputValue = e.target.value;\r\n\r\n    switch (inputName) {\r\n      case \"title\":\r\n        setTitle(inputValue);\r\n        break;\r\n      case \"author\":\r\n        setAuthor(inputValue);\r\n        break;\r\n      case \"text\":\r\n        setText(inputValue);\r\n        break;\r\n      case \"category\":\r\n        setCategory(inputValue);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (!title || !text || !author) {\r\n      alert(\"Please fill in all fields\");\r\n      return;\r\n    }\r\n    const blog = {\r\n      id: nanoid(),\r\n      title,\r\n      author,\r\n      img: \"https://via.placeholder.com/80x120\",\r\n      text,\r\n      category,\r\n    };\r\n    dispatch(addBlog(blog));\r\n    resetState();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ContainerStyled>\r\n        <FormStyled onSubmit={submitHandler}>\r\n          <WrapperStyled>\r\n            <InputWrapper>\r\n              <LabelStyled>\r\n                <LabelSpanStyled>Заголовок</LabelSpanStyled>\r\n                <FormInputStyled\r\n                  type=\"text\"\r\n                  onChange={changeHandler}\r\n                  name=\"title\"\r\n                  value={title}\r\n                />\r\n              </LabelStyled>\r\n              <LabelStyled>\r\n                <LabelSpanStyled>Автор</LabelSpanStyled>\r\n                <FormInputStyled\r\n                  type=\"text\"\r\n                  onChange={changeHandler}\r\n                  name=\"author\"\r\n                  value={author}\r\n                />\r\n              </LabelStyled>\r\n              <LabelStyled>\r\n                <LabelSpanStyled>Категория</LabelSpanStyled>\r\n                <SelectStyled\r\n                  onChange={changeHandler}\r\n                  name=\"category\"\r\n                  value={category}\r\n                >\r\n                  {categoryList.map((el) => (\r\n                    <OptionStyled key={el.length} value={el}>\r\n                      {el}\r\n                    </OptionStyled>\r\n                  ))}\r\n                </SelectStyled>\r\n              </LabelStyled>\r\n            </InputWrapper>\r\n            <TextAreaWrapperStyled>\r\n              <LabelStyled>\r\n                <LabelSpanStyled>Текст</LabelSpanStyled>\r\n                <TextAreaStyled\r\n                  placeholder=\"Что у вас нового?\"\r\n                  onChange={changeHandler}\r\n                  name=\"text\"\r\n                  value={text}\r\n                />\r\n              </LabelStyled>\r\n            </TextAreaWrapperStyled>\r\n          </WrapperStyled>\r\n          <ButtonStyled>Добивить</ButtonStyled>\r\n        </FormStyled>\r\n      </ContainerStyled>\r\n    </>\r\n  );\r\n}\r\n","import Blog from \"components/Blog/Blog\";\r\nimport Form from \"components/Form/Form\";\r\nimport React from \"react\";\r\n\r\nexport default function Articles() {\r\n  return (\r\n    <>\r\n      <Form />\r\n      <Blog />\r\n    </>\r\n  );\r\n}\r\n"],"names":["categoryList","PostWrapperStyled","styled","ImgWrapperStyled","ImgStyled","InfoWrapperStyled","TitleStyled","TextStyled","AuthorStyled","CategoryStyled","ButtonTextStyled","p","theme","colors","blue","DeleteButtonStyled","Post","processedText","id","title","author","text","category","img","dispatch","useDispatch","useState","textToggle","setTextToggle","slice","src","onClick","deleteBlog","BlogContainerStyled","ContainerStyled","BlogListStyled","BlogSelectStyled","OptionStyled","BlogLabelStyled","fontSizes","medium","getBlogs","state","blogs","PaginationListStyled","PaginationItemStyled","PaginationLinkStyled","dark","accent","Pagination","blogsPerPage","totalBlogs","paginate","pageNumbers","i","Math","ceil","push","map","number","pagesAmount","Blog","useSelector","setBlogsPerPage","currentPage","setCurrentPage","lastBlogIndex","firstBlogIndex","currentBlog","defaultValue","onChange","e","value","target","Infinity","el","index","pageNumber","length","nanoid","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase","FormStyled","border","WrapperStyled","LabelStyled","LabelSpanStyled","FormInputStyled","InputWrapper","SelectStyled","TextAreaWrapperStyled","TextAreaStyled","inputDark","ButtonStyled","white","useLocalStorage","key","currentValue","JSON","parse","localStorage","getItem","error","setValue","useEffect","setItem","stringify","Form","setTitle","setAuthor","setText","setCategory","changeHandler","inputName","name","inputValue","onSubmit","preventDefault","blog","addBlog","alert","type","placeholder","Articles"],"sourceRoot":""}